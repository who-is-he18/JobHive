"""added tablenames,serialization rules

Revision ID: f5444032480c
Revises: 7a350a1d3d86
Create Date: 2024-11-15 22:12:16.163176

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'f5444032480c'
down_revision = '7a350a1d3d86'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('jobseeker_profile')
    op.drop_table('admin_action')
    op.drop_table('payment')
    op.drop_table('notification')
    op.drop_table('employer_profile')
    op.drop_table('user')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('employer_profile',
    sa.Column('employer_id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('company_name', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('company_email', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('profile_pic', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('what_were_looking_for', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('verified', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.user_id'], name='employer_profile_user_id_fkey'),
    sa.PrimaryKeyConstraint('employer_id', name='employer_profile_pkey'),
    sa.UniqueConstraint('user_id', name='employer_profile_user_id_key')
    )
    op.create_table('notification',
    sa.Column('notification_id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('message', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('notification_type', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('is_read', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.user_id'], name='notification_user_id_fkey'),
    sa.PrimaryKeyConstraint('notification_id', name='notification_pkey')
    )
    op.create_table('payment',
    sa.Column('payment_id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('amount', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=False),
    sa.Column('payment_status', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('payment_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('reference_code', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('phone_number', sa.VARCHAR(length=15), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.user_id'], name='payment_user_id_fkey'),
    sa.PrimaryKeyConstraint('payment_id', name='payment_pkey'),
    sa.UniqueConstraint('reference_code', name='payment_reference_code_key')
    )
    op.create_table('user',
    sa.Column('user_id', sa.INTEGER(), server_default=sa.text("nextval('user_user_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('username', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('phone', sa.VARCHAR(length=15), autoincrement=False, nullable=True),
    sa.Column('password_hash', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('role', sa.VARCHAR(length=20), autoincrement=False, nullable=False),
    sa.Column('is_verified', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('is_admin', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('user_id', name='user_pkey'),
    sa.UniqueConstraint('email', name='user_email_key'),
    sa.UniqueConstraint('username', name='user_username_key'),
    postgresql_ignore_search_path=False
    )
    op.create_table('admin_action',
    sa.Column('audit_id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('admin_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('action', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('target_user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('action_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['admin_id'], ['user.user_id'], name='admin_action_admin_id_fkey'),
    sa.ForeignKeyConstraint(['target_user_id'], ['user.user_id'], name='admin_action_target_user_id_fkey'),
    sa.PrimaryKeyConstraint('audit_id', name='admin_action_pkey')
    )
    op.create_table('jobseeker_profile',
    sa.Column('profile_id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('username', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('profile_pic', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('bio', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('job_description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('availability', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('job_category', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('salary_expectation', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=True),
    sa.Column('resume', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('profile_verified', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('linkedin', sa.VARCHAR(length=200), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.user_id'], name='jobseeker_profile_user_id_fkey'),
    sa.PrimaryKeyConstraint('profile_id', name='jobseeker_profile_pkey'),
    sa.UniqueConstraint('user_id', name='jobseeker_profile_user_id_key'),
    sa.UniqueConstraint('username', name='jobseeker_profile_username_key')
    )
    # ### end Alembic commands ###
